import base64;exec base64.b64decode('# -*- coding: utf-8 -*-
#------------------------------------------------------------
# Sourced From Online Templates And Guides
#------------------------------------------------------------
# License: GPL (http://www.gnu.org/licenses/gpl-3.0.html)
# Based on code from youtube addon
#
# Thanks To: Google Search For This Template
# Modified: Pulse
#------------------------------------------------------------
if 64 - 64: i11iIiiIii
import os
import sys
import plugintools
import xbmc , xbmcaddon
from addon . common . addon import Addon
if 65 - 65: O0 / iIii1I11I1II1 % OoooooooOO - i1IIi
o0OO00 = 'plugin.video.now_music_usa'
oo = Addon ( o0OO00 , sys . argv )
i1iII1IiiIiI1 = xbmcaddon . Addon ( id = o0OO00 )
iIiiiI1IiI1I1 = i1iII1IiiIiI1 . getAddonInfo ( 'icon' )
if 87 - 87: OoOoOO00
xbmc . executebuiltin ( 'Container.SetViewMode(500)' )
if 27 - 27: OOOo0 / Oo - Ooo00oOo00o . I1IiI
o0OOO = "PLhXCO9UQq4zrFd0753tE56Y_lkZSGHJzA"
iIiiiI = "PLhXCO9UQq4zr4JYY5KKThsYgWxTQDutlC"
Iii1ii1II11i = "PLhXCO9UQq4zoXLF79bs7QvLhqZnkeEImt"
iI111iI = "PLhXCO9UQq4zq4F9uIGgnoe6DKpyurEo8q"
IiII = "PLhXCO9UQq4zqzJg9AXLN7vPRXXjDLqjaM"
iI1Ii11111iIi = "PLhXCO9UQq4zrBIgHB2z8CFcPTVG18i0jE"
i1i1II = "PLhXCO9UQq4zr0lsCffAwRb49sgDFqB0Y0"
O0oo0OO0 = "PLhXCO9UQq4zo_LtUjktxxPuGc9HOkXwOW"
I1i1iiI1 = "PLhXCO9UQq4zqTB2GeXzJU-Z7sxdIN6eXc"
iiIIIII1i1iI = "PLhXCO9UQq4zp3smaoj_f4YEAY8LcZRfEA"
o0oO0 = "PLhXCO9UQq4zoamaWXoBh9Inmip35WT_wt"
oo00 = "PLhXCO9UQq4zpPlrWRjplGHVsHfGNNTXbA"
o00 = "PLhXCO9UQq4zrpLh7tE32b-k_bMtHwhVJb"
Oo0oO0ooo = "PLhXCO9UQq4zrDNeKI1QM9uMxnoCeZFjFX"
o0oOoO00o = "PLhXCO9UQq4zpScYpNurFwk_MwISLrZu7h"
i1 = "PLhXCO9UQq4zrsKkkKxxa6noow0hyF3yDH"
oOOoo00O0O = "PLhXCO9UQq4zq-nST0XUPrc4dXnNP91C6n"
i1111 = "PLhXCO9UQq4zrr7mFrL_MnCL3ZSXObqXP2"
i11 = "PLhXCO9UQq4zq5hphKHCAbvCQCkD7kUpRh"
I11 = "PLhXCO9UQq4zpRZy0u0I211tJ7FNNBGqPl"
Oo0o0000o0o0 = "PLhXCO9UQq4zoHDQvkRqRIGdmeobQWjydv"
oOo0oooo00o = "PLhXCO9UQq4zq8hsV9zQKODULr0pPRSROh"
oO0o0o0ooO0oO = "PLhXCO9UQq4zpvrngDy__jyt0ygy0-gEbV"
oo0o0O00 = "PLhXCO9UQq4zoDNu3s-ZBGvLXNh-x62bpx"
oO = "PLhXCO9UQq4zpbUpTqwCoP9tDjCJP8bSWy"
i1iiIIiiI111 = "PLhXCO9UQq4zqaICtPPe4w7xZkW2a7wse1"
oooOOOOO = "PLhXCO9UQq4zrcmxDyrc4VOjkR-pdeSyx7"
i1iiIII111ii = "PLhXCO9UQq4zpM52kMaoJTruplhYHO1VJL"
i1iIIi1 = "PLhXCO9UQq4zrFMIkIZUrjgOiuiAEgZK7-"
ii11iIi1I = "PLhXCO9UQq4zoNkrMD3wi0egQogXisLtLL"
iI111I11I1I1 = "PLhXCO9UQq4zraKhNXjBopOgxDnrSWLF7o"
OOooO0OOoo = "PLhXCO9UQq4zpvpsXcooPG0os46MJP9v67"
iIii1 = "PLhXCO9UQq4zpubjwcAP-__i_aJDnnyvz2"
oOOoO0 = "PLhXCO9UQq4zq8qJMX8x7qmI_FKOp-8que"
O0OoO000O0OO = "PLhXCO9UQq4zqrg_A2rpZKSfdkocObb8HE"
iiI1IiI = "PLhXCO9UQq4zpKFGCcSvZAoBMQP4D394aK"
II = "PLhXCO9UQq4zp3B0TunReRBiwZ02FPLiVo"
ooOoOoo0O = "PLhXCO9UQq4zrb1-KOxNy9EXvhIVuF3_je"
OooO0 = "PLhXCO9UQq4zoh32N12XWRK8X3Y6vAj5OS"
II11iiii1Ii = "PLhXCO9UQq4zpYic8APGBsd1u6Ai2c7ffu"
OO0o = "PLhXCO9UQq4zpVYTPisdNQZHJroReQT7dU"
Ooo = "PLhXCO9UQq4zpeLhu2-h5xYHNWWZPAdh1e"
O0o0Oo = "PLhXCO9UQq4zpqFRomRjV8-YLNyDLyYbAV"
Oo00OOOOO = "PLhXCO9UQq4zpKUm7pPbVqlCufiO1mTqnm"
O0O = "PLhXCO9UQq4zrHzT0KCisHvcV0YgwaXJ6A"
O00o0OO = "PLhXCO9UQq4zrfMxckbeFzxsvBDlRHfTpd"
I11i1 = "PLhXCO9UQq4zqPUHZUQml0vHiLYCViDdMx"
iIi1ii1I1 = "PLhXCO9UQq4zqImFwTOa7n0TUe_z1avAIU"
o0 = "PLhXCO9UQq4zq5FAiUu8JOrKMiZr64nNEI"
I11II1i = "PLhXCO9UQq4zp9WPKH-VFptC7PEYAvlFBH"
IIIII = "PLhXCO9UQq4zrs_TDdsuYf7h_U93EJp9HZ"
ooooooO0oo = "PLhXCO9UQq4zoZ3ruEvP-mQTUcTK-0sl3P"
IIiiiiiiIi1I1 = "PLhXCO9UQq4zpBQgEib8lYbSB6zQQyHkgI"
I1IIIii = "PLhXCO9UQq4zoxPYytq1rOlngC-APUJ0YP"
oOoOooOo0o0 = "PLhXCO9UQq4zq9I04SzABXC8rzovp_ZvXH"
OOOO = "PLhXCO9UQq4zo8_B8N1VhsMt27OVPGNc8d"
OOO00 = "PLhXCO9UQq4zq_hBQlhCy6sRjNYZNFFNn3"
iiiiiIIii = "PLhXCO9UQq4zo4Y1zYiBNYSShOPmfhyuqY"
O000OO0 = "PLhXCO9UQq4zrVaTqgULE2o5y56NsheGqX"
I11iii1Ii = "PLhXCO9UQq4zrDbC-zh4QUqCxKwENr_zSP"
I1IIiiIiii = "PLhXCO9UQq4zrCIlL39oexopqQA8BeDB9R"
O000oo0O = "PLhXCO9UQq4zra4rEcEYqRb3WzQeClWixY"
OOOOi11i1 = "PLhXCO9UQq4zqSvWHcgFCWfQ6AL3StNGp7"
IIIii1II1II = "PLhXCO9UQq4zpMyM4jMHPaxqFtxzkgWkrZ"
i1I1iI = "PLhXCO9UQq4zrcy0ZcDXiYy2JBqJym-3Ue"
oo0OooOOo0 = "PLhXCO9UQq4zpWBQ55oz3zz-svWZYFzMZh"
o0O = "PLhXCO9UQq4zqqXeGgb2-BN8Uj6Sspch0D"
O00oO = "PLhXCO9UQq4zqVht-mCEG9oqPmqNdFXC6Q"
I11i1I1I = "PLhXCO9UQq4zpVGNkm_YG7oxxbWZE8t4nI"
oO0Oo = "PLhXCO9UQq4zpPoTVofs-jJPnIpv0W76ST"
oOOoo0Oo = "PLhXCO9UQq4zqJW6GIgZkxeU9hqWKbb4V8"
o00OO00OoO = "PLhXCO9UQq4zrYd97scQdHhKNa_ryaVGIG"
OOOO0OOoO0O0 = "PLhXCO9UQq4zofZjg_k78H_j6fmLtns8Ty"
O0Oo000ooO00 = "PLhXCO9UQq4zohrUfqiQYlNXP4PYRAoE4C"
oO0 = "PLhXCO9UQq4zo-cDMSQd9JeO-zTvLKjT5a"
Ii1iIiII1ii1 = "PLhXCO9UQq4zoZTepg8VJErx3O7iaMGaqV"
ooOooo000oOO = "PLhXCO9UQq4zpGyQjKulTwnAD_gVYVhl3m"
Oo0oOOo = "PLhXCO9UQq4zrTpvsQT7OSoeffp5G8ioRf"
Oo0OoO00oOO0o = "PLhXCO9UQq4zpCGjcAp8wH8YjV0EViaFhG"
OOO00O = "PLhXCO9UQq4zq5WeMt0PxOq_YJ8UJJirA9"
OOoOO0oo0ooO = "PLhXCO9UQq4zrM5fSxQYKaRNYyKyH8kozT"
O0o0O00Oo0o0 = "PLhXCO9UQq4zrfSsHIVI0gT_NT9qT6F6I0"
O00O0oOO00O00 = "PLhXCO9UQq4zrpI1uR7x8R8557fbsutJV5"
i1Oo00 = "PLhXCO9UQq4zohiJyI2hKkERMZLCaJfgtt"
i1i = "PLhXCO9UQq4zqGydAUqkkkL-fHGR1bqS5d"
iiI111I1iIiI = "PLhXCO9UQq4zrG8yKDSoOxUX02RvNNw6v6"
IIIi1I1IIii1II = "PLhXCO9UQq4zquv3uNgg8MGuNkYr-A45KE"
O0ii1ii1ii = "PLhXCO9UQq4zqV-SXi_KbBmM6FrzjxJ1nS"
oooooOoo0ooo = "PLhXCO9UQq4zptGk0j1yQjJtLXTTWGzKR9"
I1I1IiI1 = "PLhXCO9UQq4zp6IWReVN4TOmzgcieKDpbr"
III1iII1I1ii = "PLhXCO9UQq4zoVtgkOBKmOG1KtHib9Dglh"
oOOo0 = "PLhXCO9UQq4zrjUtaeWYjXQuyo943UOWoq"
oo00O00oO = "PLhXCO9UQq4zrdbo9TsKVrGXet_OOC3fAG"
iIiIIIi = "PLhXCO9UQq4zplkPsubkLv2WYd5xDNuj7R"
ooo00OOOooO = "PLhXCO9UQq4zrhGLoIPyJzSU5vLdxXZ5B0"
O00OOOoOoo0O = "PLhXCO9UQq4zoC3NaY5BY18o2uRe0qk_57"
O000OOo00oo = "PLhXCO9UQq4zpK4Ga9bFQNvjwLI--MCU5O"
oo0OOo = "PLhXCO9UQq4zrmuoojmPs3VkOdW319iNgY"
ooOOO00Ooo = "PLhXCO9UQq4zpCnzRFwh3jzNGrlWnbmn6o"
IiIIIi1iIi = "PLhXCO9UQq4zpKHToMNMRRi6Du7JsyQpRp"
ooOOoooooo = "PLhXCO9UQq4zrVKTbVFrRxP_MQRSTTowW5"
II1I = "PLhXCO9UQq4zqc4XGg0hYGrN0P-aklG5ce"
O0i1II1Iiii1I11 = "PLhXCO9UQq4zoWhHUuAeOtc-bQzOFBCiH1"
IIII = "PLhXCO9UQq4zpPmM2UD1K2v2tWvv6xnUy7"
iiIiI = "PLhXCO9UQq4zqTJeWPj1K1AOUqjHeDEs6b"
o00oooO0Oo = "PLhXCO9UQq4zqr1JdKrEoYjs8WKDDK6WG-"
o0O0OOO0Ooo = "PLhXCO9UQq4zpWtAu79fLfAg8GlN0VcXDF"
iiIiII1 = "PLhXCO9UQq4zpULwICQxH5pAVcSTJtIaRs"
OOO00O0O = "PLhXCO9UQq4zqr4ZPvYyVXTWHyClHX-P1L"
iii = "PLhXCO9UQq4zpZM41n_j0MvC3ebsvbwx8D"
oOooOOOoOo = "PLhXCO9UQq4zrIDX_Ny5NoQmKpARPi_P62"
i1Iii1i1I = "PLhXCO9UQq4zosETqoK6_qiWvCpVeUflYn"
OOoO00 = "PLhXCO9UQq4zr__vj8Z6zTTBWKqfVp4RWP"
IiI111111IIII = "PLhXCO9UQq4zosjXYVz58cTdGjkR0WaXWa"
i1Ii = "PLhXCO9UQq4zrN4xp0eF9CMOowHJ2AhToE"
ii111iI1iIi1 = "PLhXCO9UQq4zqfC1jSlLt9jR4htq1DiwMQ"
OOO = "PLhXCO9UQq4zozHUVcndbaDRnI4ctTGwQ5"
oo0OOo0 = "PLhXCO9UQq4zrSmvOUa2RJfoFEBORe4mWF"
I11IiI = "PLhXCO9UQq4zqFtNvbuNdWE1gXtl84V0BI"
O0ooO0Oo00o = "PLhXCO9UQq4zoiWsk7XfAq_rQ9W6xd6QoX"
ooO0oOOooOo0 = "PLhXCO9UQq4zon76wlruLtBC9aMFYmxWb_"
i1I1ii11i1Iii = "PLhXCO9UQq4zqJKRjYvlBGaFfrfVKazZFQ"
I1IiiiiI = "PLhXCO9UQq4zqPvu7Nubi75hBb26hvP1v7"
o0OIiII = "PLhXCO9UQq4zo_AcEi2R_jBZ3nBVB_GUQY"
ii1iII1II = "PLhXCO9UQq4zrkD3mbFAnJOm9c4CS8KdIm"
Iii1I1I11iiI1 = "PLhXCO9UQq4zqUkpG0YJWUYlbX09LxUcuW"
I1I1i1I = "PLhXCO9UQq4zpW4OXH-35KINHkW-XDdaBV"
ii1I = "PLhXCO9UQq4zrRqEB76KrDD9TEibFHMkcY"
O0oO0 = "PLhXCO9UQq4zq8VV2XmSkAoy35hp1dQSTR"
oO0O0OO0O = "PLhXCO9UQq4zrESX7zOFYVAb1cRL5BHfYk"
OO = "PLhXCO9UQq4zrX_h1fn5s1Ifucg3r76dRm"
OoOoO = "PLhXCO9UQq4zqZowghIUViCkte7nLljW7Y"
Ii1I1i = "PLhXCO9UQq4zpUXMybNlc1dvypeXR_9HPl"
OOI1iI1ii1II = "PLhXCO9UQq4zq6I56w4zAz-zolvMg2wJaH"
O0O0OOOOoo = "PLhXCO9UQq4zrMZEr2bwxoEr9l4m6K8TxU"
if 74 - 74: oO0o0 + I1Ii11i + i1111I1I
if 13 - 13: oO0OOoo0 . O0o0OO0O00O
def I1iiiii ( ) :
 plugintools . log ( "docu.run" )
 if 71 - 71: OOOoo * ooO0O0O0ooOOO - oOOo0O00o
 if 8 - 8: iIi1
 OoOOoOooooOOo = plugintools . get_params ( )
 if 87 - 87: I1III
 if OoOOoOooooOOo . get ( "action" ) is None :
  iI1iIiI1III1I ( OoOOoOooooOOo )
 else :
  OOOOoOoO0o0 = OoOOoOooooOOo . get ( "action" )
  exec OOOOoOoO0o0 + "(params)"
  if 69 - 69: I1III
 plugintools . close_item_list ( )
 if 40 - 40: iIi1 + OoooooooOO % oO0o0 - iIii1I11I1II1 . OOOo0
 if 48 - 48: oO0o0 - i1111I1I / OoooooooOO
def iI1iIiI1III1I ( params ) :
 plugintools . log ( "docu.main_list " + repr ( params ) )
 if 100 - 100: OOOo0 / oO0o0 % OoOoOO00 % Oo % oO0OOoo0
 plugintools . add_item (

 title = "Now 67" ,
 url = "plugin://plugin.video.youtube/playlist/" + Ii1I1i + "/" ,
 thumbnail = "http://www.nowthatsmusic.com/sites/g/files/aaj2366/f/styles/suzuki_breakpoints_image_mobile-md_sq/public/release/201808/f5cd9e9130128ee8cc96b564fbadb948b7012f93.jpg?itok=Y9jdsxQi" ,
 folder = True )
 if 98 - 98: O0o0OO0O00O % i11iIiiIii % I1III + OOOoo
 plugintools . add_item (

 title = "Now 66" ,
 url = "plugin://plugin.video.youtube/playlist/" + OoOoO + "/" ,
 thumbnail = "http://www.nowthatsmusic.com/sites/g/files/aaj2366/f/styles/suzuki_breakpoints_image_mobile-md_sq/public/release/201805/d2faf2edbe24bfe2d94cef7a852be9851de577e8.jpg?itok=PW38pTuu" ,
 folder = True )
 if 78 - 78: I1Ii11i % i1111I1I / ooO0O0O0ooOOO - iIii1I11I1II1
 plugintools . add_item (

 title = "Now 65" ,
 url = "plugin://plugin.video.youtube/playlist/" + OO + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/d/df/Now%21_65_cover.jpg" ,
 folder = True )
 if 69 - 69: iIi1
 plugintools . add_item (

 title = "Now 64" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0oO0 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/7/7d/Now_64_US_Cover.jpg/220px-Now_64_US_Cover.jpg" ,
 folder = True )
 if 11 - 11: OOOo0
 plugintools . add_item (

 title = "Now 63" ,
 url = "plugin://plugin.video.youtube/playlist/" + I1I1i1I + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/81UYij4B8wL._SL1500_.jpg" ,
 folder = True )
 if 16 - 16: OOOoo + oOOo0O00o * O0 % i1IIi . OOOo0
 plugintools . add_item (

 title = "Now 62" ,
 url = "plugin://plugin.video.youtube/playlist/" + o0OIiII + "/" ,
 thumbnail = "http://is5.mzstatic.com/image/thumb/Music111/v4/66/8b/c1/668bc13b-65d7-6cf5-59f6-e526411a5cfc/source/170x170bb.jpg" ,
 folder = True )
 if 67 - 67: OoooooooOO / OOOo0 * OOOoo + O0o0OO0O00O
 plugintools . add_item (

 title = "Now 61" ,
 url = "plugin://plugin.video.youtube/playlist/" + o0OOO + "/" ,
 thumbnail = "http://is4.mzstatic.com/image/thumb/Music111/v4/ef/b4/49/efb449fb-43e3-0d2a-dd97-a224bb123377/source/170x170bb.jpg" ,
 folder = True )
 if 65 - 65: OoooooooOO - I1Ii11i / I1III / OoOoOO00 / i1IIi
 plugintools . add_item (

 title = "Now 60" ,
 url = "plugin://plugin.video.youtube/playlist/" + iIiiiI + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/e/e4/Now_That%27s_What_I_Call_Music%21_60_%28US_Series%29_%28Official_Album_Cover%29_by_Various_Artists.png/220px-Now_That%27s_What_I_Call_Music%21_60_%28US_Series%29_%28Official_Album_Cover%29_by_Various_Artists.png" ,
 folder = True )
 if 71 - 71: iIi1 + OOOoo
 plugintools . add_item (

 title = "Now 59" ,
 url = "plugin://plugin.video.youtube/playlist/" + Iii1ii1II11i + "/" ,
 thumbnail = "http://themusicuniverse.com/wp-content/uploads/2016/07/now59.jpg" ,
 folder = True )
 if 28 - 28: oO0OOoo0
 plugintools . add_item (

 title = "Now 58" ,
 url = "plugin://plugin.video.youtube/playlist/" + iI111iI + "/" ,
 thumbnail = "http://www.platekompaniet.no/globalassets/imported-images/cd/1740365665.jpg" ,
 folder = True )
 if 38 - 38: I1III % OoOoOO00 % O0o0OO0O00O / Ooo00oOo00o + I1IiI / i1IIi
 plugintools . add_item (

 title = "Now 57" ,
 url = "plugin://plugin.video.youtube/playlist/" + IiII + "/" ,
 thumbnail = "http://streamd.hitparade.ch/cdimages/-now_thats_what_i_call_music_57_[us]_a.jpg" ,
 folder = True )
 if 54 - 54: iIii1I11I1II1 % I1Ii11i - oO0OOoo0 / i1111I1I - Ooo00oOo00o . O0o0OO0O00O
 plugintools . add_item (

 title = "Now 56" ,
 url = "plugin://plugin.video.youtube/playlist/" + iI1Ii11111iIi + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/f/f7/Now_That%27s_What_I_Call_Music%21_56_%28U.S._Series_Official_Album_Cover%29.png/220px-Now_That%27s_What_I_Call_Music%21_56_%28U.S._Series_Official_Album_Cover%29.png" ,
 folder = True )
 if 11 - 11: I1Ii11i . Ooo00oOo00o * oOOo0O00o * OoooooooOO + I1III
 plugintools . add_item (

 title = "Now 55" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1i1II + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/b/bb/NOW_55_United_States.jpg/220px-NOW_55_United_States.jpg" ,
 folder = True )
 if 33 - 33: O0 * oO0o0 - iIi1 % iIi1
 plugintools . add_item (

 title = "Now 54" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0oo0OO0 + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/616NU%2Bf0aHL.jpg" ,
 folder = True )
 if 18 - 18: iIi1 / Oo * iIi1 + iIi1 * i11iIiiIii * I1Ii11i
 plugintools . add_item (

 title = "Now 53" ,
 url = "plugin://plugin.video.youtube/playlist/" + I1i1iiI1 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/NOW_53_United_States.jpg/220px-NOW_53_United_States.jpg" ,
 folder = True )
 if 11 - 11: I1III / I1IiI - oOOo0O00o * OoooooooOO + OoooooooOO . I1IiI
 plugintools . add_item (

 title = "Now 52" ,
 url = "plugin://plugin.video.youtube/playlist/" + iiIIIII1i1iI + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/e/ea/Now_That%27s_What_I_Call_Music%21_52_Full.jpg/220px-Now_That%27s_What_I_Call_Music%21_52_Full.jpg" ,
 folder = True )
 if 26 - 26: OOOoo % I1Ii11i
 plugintools . add_item (

 title = "Now 51" ,
 url = "plugin://plugin.video.youtube/playlist/" + o0oO0 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/c/cd/NOW_That%27s_What_I_Call_Music%21_51.jpeg/220px-NOW_That%27s_What_I_Call_Music%21_51.jpeg" ,
 folder = True )
 if 76 - 76: oOOo0O00o * ooO0O0O0ooOOO
 plugintools . add_item (

 title = "Now 50" ,
 url = "plugin://plugin.video.youtube/playlist/" + oo00 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/8/83/Now_That%27s_What_I_Call_Music_50_%282014_US%29.jpeg/220px-Now_That%27s_What_I_Call_Music_50_%282014_US%29.jpeg" ,
 folder = True )
 if 52 - 52: oO0OOoo0
 plugintools . add_item (

 title = "Now 49" ,
 url = "plugin://plugin.video.youtube/playlist/" + o00 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/7/75/Now_49_us_album_cover.jpg/220px-Now_49_us_album_cover.jpg" ,
 folder = True )
 if 19 - 19: OOOo0
 plugintools . add_item (

 title = "Now 48" ,
 url = "plugin://plugin.video.youtube/playlist/" + Oo0oO0ooo + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/8/8b/Now_music_48_2013_us_series.jpg/220px-Now_music_48_2013_us_series.jpg" ,
 folder = True )
 if 25 - 25: OOOoo / I1III
 plugintools . add_item (

 title = "Now 47" ,
 url = "plugin://plugin.video.youtube/playlist/" + o0oOoO00o + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/c/c8/Now_Thats_Music_47_US_series.jpg/220px-Now_Thats_Music_47_US_series.jpg" ,
 folder = True )
 if 31 - 31: oO0OOoo0 . O0 % OOOo0 . oO0o0 + oOOo0O00o
 plugintools . add_item (

 title = "Now 46" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/4/44/NOW_46_US_album_cover.jpg/220px-NOW_46_US_album_cover.jpg" ,
 folder = True )
 if 71 - 71: iIi1 . OoOoOO00
 plugintools . add_item (

 title = "Now 45" ,
 url = "plugin://plugin.video.youtube/playlist/" + oOOoo00O0O + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/f/fd/Now_45_US_album_cover.jpg/220px-Now_45_US_album_cover.jpg" ,
 folder = True )
 if 62 - 62: OoooooooOO . O0o0OO0O00O
 plugintools . add_item (

 title = "Now 44" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1111 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/7/71/Now_44_US_album_cover.jpg/220px-Now_44_US_album_cover.jpg" ,
 folder = True )
 if 61 - 61: I1IiI - oO0OOoo0 - i1IIi
 plugintools . add_item (

 title = "Now 43" ,
 url = "plugin://plugin.video.youtube/playlist/" + i11 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/6/6e/Now_That%27s_What_I_Call_Music%21_43.jpg/220px-Now_That%27s_What_I_Call_Music%21_43.jpg" ,
 folder = True )
 if 25 - 25: O0 * O0o0OO0O00O + I1Ii11i . oO0o0 . oO0o0
 plugintools . add_item (

 title = "Now 42" ,
 url = "plugin://plugin.video.youtube/playlist/" + I11 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/4/4a/Now_That%27s_What_I_Call_Music%21_42_%28Official_US_Series_Album_Cover%29_by_Various_Artists.png/220px-Now_That%27s_What_I_Call_Music%21_42_%28Official_US_Series_Album_Cover%29_by_Various_Artists.png" ,
 folder = True )
 if 58 - 58: OOOo0
 plugintools . add_item (

 title = "Now 41" ,
 url = "plugin://plugin.video.youtube/playlist/" + Oo0o0000o0o0 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/a/a0/Now_That%27s_What_I_Call_Music_41_USA.jpg" ,
 folder = True )
 if 53 - 53: i1IIi
 plugintools . add_item (

 title = "Now 40" ,
 url = "plugin://plugin.video.youtube/playlist/" + oOo0oooo00o + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/d/d5/Now40us.jpg" ,
 folder = True )
 if 59 - 59: oO0o0
 plugintools . add_item (

 title = "Now 39" ,
 url = "plugin://plugin.video.youtube/playlist/" + oO0o0o0ooO0oO + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/f/fb/Now_Thats_Music%21_39_%28US_series%29.jpg/220px-Now_Thats_Music%21_39_%28US_series%29.jpg" ,
 folder = True )
 if 81 - 81: I1IiI - I1IiI . ooO0O0O0ooOOO
 plugintools . add_item (

 title = "Now 38" ,
 url = "plugin://plugin.video.youtube/playlist/" + oo0o0O00 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/b/b1/Now_That%27s_What_I_Call_Music_41_USA_artwork.jpg/220px-Now_That%27s_What_I_Call_Music_41_USA_artwork.jpg" ,
 folder = True )
 if 73 - 73: O0o0OO0O00O % i11iIiiIii - OOOo0
 plugintools . add_item (

 title = "Now 37" ,
 url = "plugin://plugin.video.youtube/playlist/" + oO + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/e/ee/Now_That%27s_What_I_Call_Music%21_37.jpg/220px-Now_That%27s_What_I_Call_Music%21_37.jpg" ,
 folder = True )
 if 7 - 7: O0 * i11iIiiIii * OOOoo + I1III % Ooo00oOo00o - I1III
 plugintools . add_item (

 title = "Now 36" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1iiIIiiI111 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/0/0b/Now_That%27s_What_I_Call_Music%21_36_%28U.S._series%29.jpg/220px-Now_That%27s_What_I_Call_Music%21_36_%28U.S._series%29.jpg" ,
 folder = True )
 if 39 - 39: Oo * oO0OOoo0 % oO0OOoo0 - OoooooooOO + oO0o0 - O0o0OO0O00O
 plugintools . add_item (

 title = "Now 35" ,
 url = "plugin://plugin.video.youtube/playlist/" + oooOOOOO + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/7/77/Now_That%27s_What_I_Call_Music%21_35.jpg/220px-Now_That%27s_What_I_Call_Music%21_35.jpg" ,
 folder = True )
 if 23 - 23: i11iIiiIii
 plugintools . add_item (

 title = "Now 34" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1iiIII111ii + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/8/80/Now_That%27s_What_I_Call_Music%21_34.jpg/220px-Now_That%27s_What_I_Call_Music%21_34.jpg" ,
 folder = True )
 if 30 - 30: oO0o0 - i1IIi % OoOoOO00 + O0o0OO0O00O * iIii1I11I1II1
 plugintools . add_item (

 title = "Now 33" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1iIIi1 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/6/6c/Now_That%27s_What_I_Call_Music_33.jpg/220px-Now_That%27s_What_I_Call_Music_33.jpg" ,
 folder = True )
 if 81 - 81: oOOo0O00o % i1IIi . iIii1I11I1II1
 plugintools . add_item (

 title = "Now 32" ,
 url = "plugin://plugin.video.youtube/playlist/" + ii11iIi1I + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/9/9d/Now_32_%28US_Series%29.jpg/220px-Now_32_%28US_Series%29.jpg" ,
 folder = True )
 if 4 - 4: i11iIiiIii % Ooo00oOo00o % i1IIi / oOOo0O00o
 plugintools . add_item (

 title = "Now 31" ,
 url = "plugin://plugin.video.youtube/playlist/" + iI111I11I1I1 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/4/49/Now31-US.jpg/220px-Now31-US.jpg" ,
 folder = True )
 if 6 - 6: ooO0O0O0ooOOO / OOOo0 % oO0OOoo0 - OOOo0
 plugintools . add_item (

 title = "Now 30" ,
 url = "plugin://plugin.video.youtube/playlist/" + OOooO0OOoo + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/2/29/Now_30_us.jpg" ,
 folder = True )
 if 31 - 31: oO0OOoo0
 plugintools . add_item (

 title = "Now 29" ,
 url = "plugin://plugin.video.youtube/playlist/" + iIii1 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/f/f8/Now_That%27s_What_I_Call_Music%21_29_US_album_cover.jpg/220px-Now_That%27s_What_I_Call_Music%21_29_US_album_cover.jpg" ,
 folder = True )
 if 23 - 23: iIi1 . oOOo0O00o
 plugintools . add_item (

 title = "Now 28" ,
 url = "plugin://plugin.video.youtube/playlist/" + oOOoO0 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/2/23/Now_28_USA.jpg" ,
 folder = True )
 if 92 - 92: I1IiI + iIi1 * OOOoo % OOOo0
 plugintools . add_item (

 title = "Now 27" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0OoO000O0OO + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/6/6e/Now_That%27s_What_I_Call_Music%21_27_%28U.S._series%29_.jpg/220px-Now_That%27s_What_I_Call_Music%21_27_%28U.S._series%29_.jpg" ,
 folder = True )
 if 42 - 42: Oo
 plugintools . add_item (

 title = "Now 26" ,
 url = "plugin://plugin.video.youtube/playlist/" + iiI1IiI + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/5/5f/USNow26cover.jpg/220px-USNow26cover.jpg" ,
 folder = True )
 if 76 - 76: OOOo0 * ooO0O0O0ooOOO % iIi1
 plugintools . add_item (

 title = "Now 25" ,
 url = "plugin://plugin.video.youtube/playlist/" + II + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/7/75/Now_25.jpg/220px-Now_25.jpg" ,
 folder = True )
 if 57 - 57: iIii1I11I1II1 - i1IIi / iIi1 - O0 * OoooooooOO % OoOoOO00
 plugintools . add_item (

 title = "Now 24" ,
 url = "plugin://plugin.video.youtube/playlist/" + ooOoOoo0O + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/8/87/Now24.jpg/220px-Now24.jpg" ,
 folder = True )
 if 68 - 68: OoooooooOO * O0o0OO0O00O % I1IiI - oOOo0O00o
 plugintools . add_item (

 title = "Now 23" ,
 url = "plugin://plugin.video.youtube/playlist/" + OooO0 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/d/d4/Now_23_USA.jpg/220px-Now_23_USA.jpg" ,
 folder = True )
 if 34 - 34: iIi1 . iIii1I11I1II1 * I1IiI * i1111I1I / iIi1 / I1Ii11i
 plugintools . add_item (

 title = "Now 22" ,
 url = "plugin://plugin.video.youtube/playlist/" + II11iiii1Ii + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/f/f4/Now_Music_Vol._22.jpg/220px-Now_Music_Vol._22.jpg" ,
 folder = True )
 if 78 - 78: Oo - oO0o0 / I1IiI
 plugintools . add_item (

 title = "Now 21" ,
 url = "plugin://plugin.video.youtube/playlist/" + OO0o + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/f/f6/Now_21_USA.jpg/220px-Now_21_USA.jpg" ,
 folder = True )
 if 10 - 10: ooO0O0O0ooOOO + Oo * I1Ii11i + iIii1I11I1II1 / iIi1 / I1Ii11i
 plugintools . add_item (

 title = "Now 20" ,
 url = "plugin://plugin.video.youtube/playlist/" + Ooo + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/4/47/Now_20_USA.jpg/220px-Now_20_USA.jpg" ,
 folder = True )
 if 42 - 42: OOOo0
 plugintools . add_item (

 title = "Now 19" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0o0Oo + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/9/91/Now19_USA.jpg/220px-Now19_USA.jpg" ,
 folder = True )
 if 38 - 38: oO0OOoo0 + OoOoOO00 % I1III % I1IiI - OOOoo / OoooooooOO
 plugintools . add_item (

 title = "Now 18" ,
 url = "plugin://plugin.video.youtube/playlist/" + Oo00OOOOO + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/4/44/Now18_USA.jpg/220px-Now18_USA.jpg" ,
 folder = True )
 if 73 - 73: oO0o0 * O0 - i11iIiiIii
 plugintools . add_item (

 title = "Now 17" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0O + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/1/14/Now17USA.jpg/220px-Now17USA.jpg" ,
 folder = True )
 if 85 - 85: OOOoo % ooO0O0O0ooOOO + O0o0OO0O00O / oO0o0 . i1111I1I + oO0OOoo0
 plugintools . add_item (

 title = "Now 16" ,
 url = "plugin://plugin.video.youtube/playlist/" + O00o0OO + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/e/e8/Now16USA.jpg/220px-Now16USA.jpg" ,
 folder = True )
 if 62 - 62: i11iIiiIii + i11iIiiIii - oO0o0
 plugintools . add_item (

 title = "Now 15" ,
 url = "plugin://plugin.video.youtube/playlist/" + I11i1 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/d/df/Now15USA.jpg/220px-Now15USA.jpg" ,
 folder = True )
 if 28 - 28: ooO0O0O0ooOOO . ooO0O0O0ooOOO % iIii1I11I1II1 * iIii1I11I1II1 . oO0o0 / ooO0O0O0ooOOO
 plugintools . add_item (

 title = "Now 14" ,
 url = "plugin://plugin.video.youtube/playlist/" + iIi1ii1I1 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/f/fc/Now14USA.jpg/220px-Now14USA.jpg" ,
 folder = True )
 if 27 - 27: Ooo00oOo00o + I1III - i1IIi
 plugintools . add_item (

 title = "Now 13" ,
 url = "plugin://plugin.video.youtube/playlist/" + o0 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/0/0f/Now13USA.jpg/220px-Now13USA.jpg" ,
 folder = True )
 if 69 - 69: oOOo0O00o - O0 % I1Ii11i + i11iIiiIii . I1IiI / Ooo00oOo00o
 plugintools . add_item (

 title = "Now 12" ,
 url = "plugin://plugin.video.youtube/playlist/" + I11II1i + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/b/b8/Now12USA.jpg/220px-Now12USA.jpg" ,
 folder = True )
 if 79 - 79: O0 * i11iIiiIii - oOOo0O00o / oOOo0O00o
 plugintools . add_item (

 title = "Now 11" ,
 url = "plugin://plugin.video.youtube/playlist/" + IIIII + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/0/0a/Now11USA.jpg/220px-Now11USA.jpg" ,
 folder = True )
 if 48 - 48: O0
 plugintools . add_item (

 title = "Now 10" ,
 url = "plugin://plugin.video.youtube/playlist/" + ooooooO0oo + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/e/ed/Now10USA.jpg/220px-Now10USA.jpg" ,
 folder = True )
 if 93 - 93: i11iIiiIii - OOOo0 * I1Ii11i * O0o0OO0O00O % O0 + OoooooooOO
 plugintools . add_item (

 title = "Now 9" ,
 url = "plugin://plugin.video.youtube/playlist/" + IIiiiiiiIi1I1 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/c/cb/Now_9_USA.jpg/220px-Now_9_USA.jpg" ,
 folder = True )
 if 25 - 25: oOOo0O00o + OOOoo / I1III . oO0o0 % O0 * Ooo00oOo00o
 plugintools . add_item (

 title = "Now 8" ,
 url = "plugin://plugin.video.youtube/playlist/" + I1IIIii + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/f/f6/Now8USA.jpg/220px-Now8USA.jpg" ,
 folder = True )
 if 84 - 84: I1III % OOOoo + i11iIiiIii
 plugintools . add_item (

 title = "Now 7" ,
 url = "plugin://plugin.video.youtube/playlist/" + oOoOooOo0o0 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/1/1f/Now_7_USA.jpg/220px-Now_7_USA.jpg" ,
 folder = True )
 if 28 - 28: Oo + Ooo00oOo00o * oO0OOoo0 % i1111I1I . O0o0OO0O00O % O0
 plugintools . add_item (

 title = "Now 6" ,
 url = "plugin://plugin.video.youtube/playlist/" + OOOO + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/f/f4/Now_6_USA.jpg/220px-Now_6_USA.jpg" ,
 folder = True )
 if 16 - 16: O0o0OO0O00O - iIii1I11I1II1 / OOOo0 . OoOoOO00 + iIii1I11I1II1
 plugintools . add_item (

 title = "Now 5" ,
 url = "plugin://plugin.video.youtube/playlist/" + OOO00 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/f/ff/Now_5_USA.jpg" ,
 folder = True )
 if 19 - 19: Ooo00oOo00o - Oo . O0
 plugintools . add_item (

 title = "Now 4" ,
 url = "plugin://plugin.video.youtube/playlist/" + iiiiiIIii + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/2/24/Now_4_US.jpg/220px-Now_4_US.jpg" ,
 folder = True )
 if 60 - 60: OoOoOO00 + Oo
 plugintools . add_item (

 title = "Now 3" ,
 url = "plugin://plugin.video.youtube/playlist/" + O000OO0 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/6/6c/Now_3_US.jpg/220px-Now_3_US.jpg" ,
 folder = True )
 if 9 - 9: I1III * OoooooooOO - iIii1I11I1II1 + I1IiI / Ooo00oOo00o . Ooo00oOo00o
 plugintools . add_item (

 title = "Now 2" ,
 url = "plugin://plugin.video.youtube/playlist/" + I11iii1Ii + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/b/b9/Now_2_US.jpg/220px-Now_2_US.jpg" ,
 folder = True )
 if 49 - 49: OoOoOO00
 plugintools . add_item (

 title = "Now 1" ,
 url = "plugin://plugin.video.youtube/playlist/" + I1IIiiIiii + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/c/cb/Now_1_US.jpg/220px-Now_1_US.jpg" ,
 folder = True )
 if 25 - 25: OoooooooOO - OOOo0 . OOOo0 * i1111I1I
 plugintools . add_item (

 title = "Now Hits & Remixes" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0O0OOOOoo + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/A1lZbr1limL._SL1500_.jpg" ,
 folder = True )
 if 81 - 81: ooO0O0O0ooOOO + oOOo0O00o
 plugintools . add_item (

 title = "Now Disney Junior" ,
 url = "plugin://plugin.video.youtube/playlist/" + OOI1iI1ii1II + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/611s5giKrYL._SS500.jpg" ,
 folder = True )
 if 98 - 98: OOOo0
 plugintools . add_item (

 title = "Now 00's" ,
 url = "plugin://plugin.video.youtube/playlist/" + oO0O0OO0O + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/51FhHSddPXL._SS500.jpg" ,
 folder = True )
 if 95 - 95: I1III / I1III
 plugintools . add_item (

 title = "Now Tailgate" ,
 url = "plugin://plugin.video.youtube/playlist/" + ii1I + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/91cOsQ50cML._SL1500_.jpg" ,
 folder = True )
 if 30 - 30: I1Ii11i + Oo / Oo % I1Ii11i . I1Ii11i
 plugintools . add_item (

 title = "Now Workout TBE 17" ,
 url = "plugin://plugin.video.youtube/playlist/" + ii1iII1II + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/61GlxiAPHXL._SS500.jpg" ,
 folder = True )
 if 55 - 55: I1III - O0o0OO0O00O + OoOoOO00 + ooO0O0O0ooOOO % OOOoo
 plugintools . add_item (

 title = "Now 90s PoP" ,
 url = "plugin://plugin.video.youtube/playlist/" + O000oo0O + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/81NtcjiEBIL._SY355_.jpg" ,
 folder = True )
 if 41 - 41: i1IIi - O0o0OO0O00O - OOOoo
 plugintools . add_item (

 title = "Now Workout 2017" ,
 url = "plugin://plugin.video.youtube/playlist/" + OOOOi11i1 + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/61ZHfY8zoNL._SS500.jpg" ,
 folder = True )
 if 8 - 8: Ooo00oOo00o + iIi1 - oO0o0 % Oo % oO0o0 * i1111I1I
 plugintools . add_item (

 title = "Now Party Anthems 3" ,
 url = "plugin://plugin.video.youtube/playlist/" + IIIii1II1II + "/" ,
 thumbnail = "http://is1.mzstatic.com/image/thumb/Music60/v4/da/31/2e/da312eb1-ac6a-2968-825f-821276c34a2b/source/170x170bb.jpg" ,
 folder = True )
 if 9 - 9: Oo - i11iIiiIii - oO0OOoo0 * OOOoo + I1III
 plugintools . add_item (

 title = "Now Broadway" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1I1iI + "/" ,
 thumbnail = "http://is1.mzstatic.com/image/thumb/Music49/v4/ec/95/80/ec958053-0e28-68f2-2abd-8662ce0d4a6e/source/170x170bb.jpg" ,
 folder = True )
 if 44 - 44: OoOoOO00
 plugintools . add_item (

 title = "Now Power Ballads" ,
 url = "plugin://plugin.video.youtube/playlist/" + oo0OooOOo0 + "/" ,
 thumbnail = "http://is5.mzstatic.com/image/thumb/Music69/v4/fb/fe/8e/fbfe8e54-346f-77e3-e269-5279fc8ccd46/source/170x170bb.jpg" ,
 folder = True )
 if 52 - 52: I1Ii11i - Oo + I1Ii11i % oO0o0
 plugintools . add_item (

 title = "Now Rock" ,
 url = "plugin://plugin.video.youtube/playlist/" + o0O + "/" ,
 thumbnail = "http://is1.mzstatic.com/image/thumb/Music2/v4/bd/49/04/bd49046f-ab0d-3bdb-db83-2151b9029a0c/source/170x170bb.jpg" ,
 folder = True )
 if 35 - 35: iIii1I11I1II1
 plugintools . add_item (

 title = "Now Workout 2016" ,
 url = "plugin://plugin.video.youtube/playlist/" + O00oO + "/" ,
 thumbnail = "http://is1.mzstatic.com/image/thumb/Music49/v4/f0/fc/3e/f0fc3e33-d059-cc7d-d092-32c940d6eebb/source/170x170bb.jpg" ,
 folder = True )
 if 42 - 42: iIi1 . OOOo0 . i1IIi + I1IiI + oO0OOoo0 + OOOo0
 plugintools . add_item (

 title = "Now Disney Princess" ,
 url = "plugin://plugin.video.youtube/playlist/" + I11i1I1I + "/" ,
 thumbnail = "http://is1.mzstatic.com/image/thumb/Music3/v4/fa/7f/48/fa7f48bd-c1ec-8f31-4c4d-31b4345f8955/source/170x170bb.jpg" ,
 folder = True )
 if 31 - 31: ooO0O0O0ooOOO . oO0OOoo0 - I1III . OoooooooOO / OoooooooOO
 plugintools . add_item (

 title = "Now Halloween" ,
 url = "plugin://plugin.video.youtube/playlist/" + oO0Oo + "/" ,
 thumbnail = "http://is3.mzstatic.com/image/thumb/Music3/v4/22/73/f9/2273f9dd-5bd0-e560-f904-17085211a56b/source/170x170bb.jpg" ,
 folder = True )
 if 56 - 56: Ooo00oOo00o / i1111I1I / i11iIiiIii + OoooooooOO - Oo - O0o0OO0O00O
 plugintools . add_item (

 title = "Now New Wave 80s" ,
 url = "plugin://plugin.video.youtube/playlist/" + oOOoo0Oo + "/" ,
 thumbnail = "http://is5.mzstatic.com/image/thumb/Music7/v4/a5/c1/b2/a5c1b283-4243-e48d-c025-bcfecb48daa3/source/170x170bb.jpg" ,
 folder = True )
 if 21 - 21: O0 % oOOo0O00o . OOOo0 / OoOoOO00 + oOOo0O00o
 plugintools . add_item (

 title = "Now Funk" ,
 url = "plugin://plugin.video.youtube/playlist/" + o00OO00OoO + "/" ,
 thumbnail = "https://i5.walmartimages.com/asr/6ca81510-1790-4e35-b1a6-9121ef5d2c26_1.fea4be93fd3e083fe467cf79f4d3e74c.jpeg?odnHeight=450&odnWidth=450&odnBg=FFFFFF" ,
 folder = True )
 if 53 - 53: i1111I1I - OOOo0 - i1111I1I * ooO0O0O0ooOOO
 plugintools . add_item (

 title = "Now #1s" ,
 url = "plugin://plugin.video.youtube/playlist/" + OOOO0OOoO0O0 + "/" ,
 thumbnail = "http://is3.mzstatic.com/image/thumb/Music3/v4/65/d1/b8/65d1b8d8-7d76-b9be-61db-d7e35674fec9/source/170x170bb.jpg" ,
 folder = True )
 if 71 - 71: O0 - iIii1I11I1II1
 plugintools . add_item (

 title = "Now Movies" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0Oo000ooO00 + "/" ,
 thumbnail = "http://is5.mzstatic.com/image/thumb/Music5/v4/d2/09/59/d2095989-ea80-6568-a253-9f105476d875/source/170x170bb.jpg" ,
 folder = True )
 if 12 - 12: oO0OOoo0 / oO0o0
 plugintools . add_item (

 title = "Now Disney 3" ,
 url = "plugin://plugin.video.youtube/playlist/" + oO0 + "/" ,
 thumbnail = "http://is3.mzstatic.com/image/thumb/Music1/v4/bc/b8/17/bcb817b9-361d-7617-7dbb-7dafd7963728/source/170x170bb.jpg" ,
 folder = True )
 if 42 - 42: Oo
 plugintools . add_item (

 title = "Now Party Anthems 2" ,
 url = "plugin://plugin.video.youtube/playlist/" + Ii1iIiII1ii1 + "/" ,
 thumbnail = "http://is1.mzstatic.com/image/thumb/Music7/v4/2a/e2/6e/2ae26ea5-2f8f-463c-fabb-cb181155309d/source/170x170bb.jpg" ,
 folder = True )
 if 19 - 19: i1111I1I % I1Ii11i * iIii1I11I1II1 + OOOo0
 plugintools . add_item (

 title = "Now Slow Jams" ,
 url = "plugin://plugin.video.youtube/playlist/" + ooOooo000oOO + "/" ,
 thumbnail = "https://pbs.twimg.com/media/BfGZ6YZIAAE1X9d.jpg" ,
 folder = True )
 if 46 - 46: Oo
 plugintools . add_item (

 title = "Now Disney 2" ,
 url = "plugin://plugin.video.youtube/playlist/" + Oo0oOOo + "/" ,
 thumbnail = "http://is4.mzstatic.com/image/thumb/Music4/v4/cf/ba/bf/cfbabfd0-d9de-8585-b2a8-dac5735a8511/source/170x170bb.jpg" ,
 folder = True )
 if 1 - 1: ooO0O0O0ooOOO
 plugintools . add_item (

 title = "Now Soundcheck" ,
 url = "plugin://plugin.video.youtube/playlist/" + Oo0OoO00oOO0o + "/" ,
 thumbnail = "https://i5.walmartimages.com/asr/34a14c19-9629-4a38-ac57-a9dc4b2681ef_1.befed645522b5153fd83fbf82bb0113b.jpeg?odnHeight=450&odnWidth=450&odnBg=FFFFFF" ,
 folder = True )
 if 97 - 97: oO0OOoo0 + ooO0O0O0ooOOO + O0 + i11iIiiIii
 plugintools . add_item (

 title = "Now Love Songs" ,
 url = "plugin://plugin.video.youtube/playlist/" + OOO00O + "/" ,
 thumbnail = "http://destinyxnowmusic.freehostia.com/nowmusic/nowuslovesongs.jpg" ,
 folder = True )
 if 77 - 77: oO0o0 / OoooooooOO
 plugintools . add_item (

 title = "Now Disney" ,
 url = "plugin://plugin.video.youtube/playlist/" + OOoOO0oo0ooO + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/c/c2/Now-disney-uk.jpg/220px-Now-disney-uk.jpg" ,
 folder = True )
 if 46 - 46: oO0o0 % iIii1I11I1II1 . ooO0O0O0ooOOO % ooO0O0O0ooOOO + i11iIiiIii
 plugintools . add_item (

 title = "Now Party Anthems" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0o0O00Oo0o0 + "/" ,
 thumbnail = "http://destinyxnowmusic.freehostia.com/nowmusic/nowuspartyanthems.jpg" ,
 folder = True )
 if 72 - 72: iIii1I11I1II1 * OOOoo % I1III / Ooo00oOo00o
 plugintools . add_item (

 title = "Now British" ,
 url = "plugin://plugin.video.youtube/playlist/" + O00O0oOO00O00 + "/" ,
 thumbnail = "http://destinyxnowmusic.freehostia.com/nowmusic/nowusbritish.jpg" ,
 folder = True )
 if 35 - 35: I1III + i1IIi % I1Ii11i % O0o0OO0O00O + i1111I1I
 plugintools . add_item (

 title = "Now Classic Rock Hits" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1Oo00 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/e/e9/Nowclassicrockhits.jpg" ,
 folder = True )
 if 17 - 17: i1IIi
 plugintools . add_item (

 title = "Now I Wanna Rock" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1i + "/" ,
 thumbnail = "http://vignette2.wikia.nocookie.net/lyricwiki/images/e/ea/Various_artists_-_Now_That%27s_What_I_Call_I_Wanna_Rock.jpg/revision/latest/scale-to-width-down/180?cb=20120422231704" ,
 folder = True )
 if 21 - 21: Oo
 plugintools . add_item (

 title = "Now 80s Hits" ,
 url = "plugin://plugin.video.youtube/playlist/" + iiI111I1iIiI + "/" ,
 thumbnail = "http://destinyxnowmusic.freehostia.com/nowmusic/nowus80shits.jpg" ,
 folder = True )
 if 29 - 29: O0o0OO0O00O / OoOoOO00 / I1III * oO0OOoo0
 plugintools . add_item (

 title = "Now Modern Songbook" ,
 url = "plugin://plugin.video.youtube/playlist/" + IIIi1I1IIii1II + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/61jkm2Vx0VL._SY355_.jpg" ,
 folder = True )
 if 10 - 10: iIi1 % oOOo0O00o * oOOo0O00o . O0o0OO0O00O / OOOoo % oO0OOoo0
 plugintools . add_item (

 title = "Now RnB" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0ii1ii1ii + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/61e-Vrfz%2BTL._SY300_.jpg" ,
 folder = True )
 if 49 - 49: Ooo00oOo00o / i1111I1I + O0 * oO0o0
 plugintools . add_item (

 title = "Now 1990s" ,
 url = "plugin://plugin.video.youtube/playlist/" + oooooOoo0ooo + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/4/44/Now_The_1990%27s_%28US%29.jpg/220px-Now_The_1990%27s_%28US%29.jpg" ,
 folder = True )
 if 28 - 28: I1III + i11iIiiIii / O0o0OO0O00O % I1IiI % Oo - O0
 plugintools . add_item (

 title = "Now Club Hits 2" ,
 url = "plugin://plugin.video.youtube/playlist/" + I1I1IiI1 + "/" ,
 thumbnail = "http://destinyxnowmusic.freehostia.com/nowmusic/nowusclubhits2.jpg" ,
 folder = True )
 if 54 - 54: i1IIi + OoOoOO00
 plugintools . add_item (

 title = "Now Faith" ,
 url = "plugin://plugin.video.youtube/playlist/" + III1iII1I1ii + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/c/cc/NOW_That%27s_What_I_Call_Faith.jpg/220px-NOW_That%27s_What_I_Call_Faith.jpg" ,
 folder = True )
 if 83 - 83: I1Ii11i - OOOo0 + oO0OOoo0
 plugintools . add_item (

 title = "Now Love" ,
 url = "plugin://plugin.video.youtube/playlist/" + oOOo0 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/d/d1/Now_Love_3_UK_Series.jpg/220px-Now_Love_3_UK_Series.jpg" ,
 folder = True )
 if 5 - 5: OOOoo
 plugintools . add_item (

 title = "Now Dance Classics" ,
 url = "plugin://plugin.video.youtube/playlist/" + oo00O00oO + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/b/b2/Now_That%27s_What_I_Call_Dance_Classics_cover.jpg/220px-Now_That%27s_What_I_Call_Dance_Classics_cover.jpg" ,
 folder = True )
 if 46 - 46: oOOo0O00o
 plugintools . add_item (

 title = "Now Club Hits" ,
 url = "plugin://plugin.video.youtube/playlist/" + iIiIIIi + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/1/15/Now_That%27s_What_I_Call_Club_Hits_cover.jpg/220px-Now_That%27s_What_I_Call_Club_Hits_cover.jpg" ,
 folder = True )
 if 45 - 45: I1III
 plugintools . add_item (

 title = "Now 80s 2" ,
 url = "plugin://plugin.video.youtube/playlist/" + ooo00OOOooO + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/7/7b/Now_That%27s_What_I_Call_the_80s_2_cover.jpg/220px-Now_That%27s_What_I_Call_the_80s_2_cover.jpg" ,
 folder = True )
 if 21 - 21: i1111I1I . iIi1 . oO0OOoo0 / Oo / iIi1
 plugintools . add_item (

 title = "Now Power Ballads" ,
 url = "plugin://plugin.video.youtube/playlist/" + O00OOOoOoo0O + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/5/54/Now_Power_Ballads.jpg/220px-Now_Power_Ballads.jpg" ,
 folder = True )
 if 17 - 17: oO0OOoo0 / oO0OOoo0 / O0o0OO0O00O
 plugintools . add_item (

 title = "Now Motown" ,
 url = "plugin://plugin.video.youtube/playlist/" + O000OOo00oo + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/7/71/Now%21Motown.jpg/220px-Now%21Motown.jpg" ,
 folder = True )
 if 1 - 1: i1IIi . i11iIiiIii % oO0OOoo0
 plugintools . add_item (

 title = "Now 10th Anniversary" ,
 url = "plugin://plugin.video.youtube/playlist/" + oo0OOo + "/" ,
 thumbnail = "http://destinyxnowmusic.freehostia.com/nowmusic/nowus10th.jpg" ,
 folder = True )
 if 82 - 82: iIii1I11I1II1 + Oo . iIii1I11I1II1 % oOOo0O00o / OOOoo . OOOoo
 plugintools . add_item (

 title = "Now Classic Rock" ,
 url = "plugin://plugin.video.youtube/playlist/" + ooOOO00Ooo + "/" ,
 thumbnail = "http://destinyxnowmusic.freehostia.com/nowmusic/nowusclassicrock.jpg" ,
 folder = True )
 if 14 - 14: oO0o0 . oO0OOoo0 . O0o0OO0O00O + OoooooooOO - oO0OOoo0 + oOOo0O00o
 plugintools . add_item (

 title = "Now 80s" ,
 url = "plugin://plugin.video.youtube/playlist/" + IiIIIi1iIi + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/f/f3/Now80%27sUS.jpg/220px-Now80%27sUS.jpg" ,
 folder = True )
 if 9 - 9: OOOoo
 plugintools . add_item (

 title = "Now Party Hits" ,
 url = "plugin://plugin.video.youtube/playlist/" + ooOOoooooo + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/6/6f/Now_That%27s_What_I_Call_Party_Hits%21.jpg/220px-Now_That%27s_What_I_Call_Party_Hits%21.jpg" ,
 folder = True )
 if 59 - 59: OOOo0 * OoOoOO00 . O0
 plugintools . add_item (

 title = "Now #1s" ,
 url = "plugin://plugin.video.youtube/playlist/" + II1I + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/d/d6/Now-1s.jpg/220px-Now-1s.jpg" ,
 folder = True )
 if 56 - 56: OOOoo - ooO0O0O0ooOOO % OOOo0 - oO0o0
 plugintools . add_item (

 title = "Now Off The Hook" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0i1II1Iiii1I11 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/f/ff/Off_the_Hook_album_cover_by_various_artists_from_2002.jpg/220px-Off_the_Hook_album_cover_by_various_artists_from_2002.jpg" ,
 folder = True )
 if 51 - 51: O0 / I1III * iIii1I11I1II1 + I1Ii11i + oO0o0
 plugintools . add_item (

 title = "Now Country V10" ,
 url = "plugin://plugin.video.youtube/playlist/" + Iii1I1I11iiI1 + "/" ,
 thumbnail = "https://i1.wp.com/www.countryschatter.com/wp-content/uploads/2017/05/UMG_thumb.jpg?resize=420%2C420" ,
 folder = True )
 if 98 - 98: iIii1I11I1II1 * I1Ii11i * oO0OOoo0 + I1III % i11iIiiIii % O0
 plugintools . add_item (

 title = "Now Country #1s" ,
 url = "plugin://plugin.video.youtube/playlist/" + IIII + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/81Py8f8szcL._SX425_.jpg" ,
 folder = True )
 if 27 - 27: O0
 plugintools . add_item (

 title = "Now Country V9" ,
 url = "plugin://plugin.video.youtube/playlist/" + iiIiI + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/91pMb4NNnOL._SX425_.jpg" ,
 folder = True )
 if 79 - 79: oO0o0 - O0o0OO0O00O + oO0o0 . i1111I1I
 plugintools . add_item (

 title = "Now Southern Rock" ,
 url = "plugin://plugin.video.youtube/playlist/" + o00oooO0Oo + "/" ,
 thumbnail = "https://i5.walmartimages.com/asr/d72cb824-620e-4ffb-8a3d-1cd85ac9d9c1_1.02af18825b6bd6fda0a8f17c0fe9da61.jpeg?odnHeight=450&odnWidth=450&odnBg=FFFFFF" ,
 folder = True )
 if 28 - 28: i1IIi - ooO0O0O0ooOOO
 plugintools . add_item (

 title = "Now Country V8" ,
 url = "plugin://plugin.video.youtube/playlist/" + o0O0OOO0Ooo + "/" ,
 thumbnail = "https://ll-us-i5.wal.co/asr/5d6fdf9b-f097-47d3-ae43-c8e7e2d0971f_1.539dc6546f6bef78bbfe8a712f5d7efd.jpeg?odnHeight=450&odnWidth=450&odnBg=FFFFFF" ,
 folder = True )
 if 54 - 54: ooO0O0O0ooOOO - O0 % oO0OOoo0
 plugintools . add_item (

 title = "Now AMC Awards" ,
 url = "plugin://plugin.video.youtube/playlist/" + iiIiII1 + "/" ,
 thumbnail = "http://is5.mzstatic.com/image/thumb/Music3/v4/0e/bd/ed/0ebded99-257e-d99a-d5fc-d7051f812def/source/170x170bb.jpg" ,
 folder = True )
 if 73 - 73: O0 . I1IiI + OOOo0 - O0o0OO0O00O % O0o0OO0O00O . O0o0OO0O00O
 plugintools . add_item (

 title = "Now Country V7" ,
 url = "plugin://plugin.video.youtube/playlist/" + OOO00O0O + "/" ,
 thumbnail = "http://is4.mzstatic.com/image/thumb/Music2/v4/6c/a8/23/6ca8231e-3ac6-2389-e926-6a6ac3752627/source/170x170bb.jpg" ,
 folder = True )
 if 17 - 17: OOOoo - OoooooooOO % OOOoo . oOOo0O00o / i11iIiiIii % ooO0O0O0ooOOO
 plugintools . add_item (

 title = "Now Country Ballads 2" ,
 url = "plugin://plugin.video.youtube/playlist/" + iii + "/" ,
 thumbnail = "http://is2.mzstatic.com/image/thumb/Music4/v4/a5/2c/7f/a52c7f3d-4672-cf81-fa80-8c28e4fe53c6/source/170x170bb.jpg" ,
 folder = True )
 if 28 - 28: O0o0OO0O00O
 plugintools . add_item (

 title = "Now Country V6" ,
 url = "plugin://plugin.video.youtube/playlist/" + oOooOOOoOo + "/" ,
 thumbnail = "http://is3.mzstatic.com/image/thumb/Music2/v4/ce/b1/4c/ceb14c1f-48d8-40a3-748e-3aab5e85067a/source/170x170bb.jpg" ,
 folder = True )
 if 58 - 58: I1IiI
 plugintools . add_item (

 title = "Now Country Party" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1Iii1i1I + "/" ,
 thumbnail = "http://destinyxnowmusic.freehostia.com/nowmusic/nowuscountryparty.jpg" ,
 folder = True )
 if 37 - 37: Oo - iIii1I11I1II1 / I1Ii11i
 plugintools . add_item (

 title = "Now Country V5" ,
 url = "plugin://plugin.video.youtube/playlist/" + OOoO00 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/1/1d/NOWCountry5.jpg/220px-NOWCountry5.jpg" ,
 folder = True )
 if 73 - 73: i11iIiiIii - oOOo0O00o
 plugintools . add_item (

 title = "Now Country Ballads" ,
 url = "plugin://plugin.video.youtube/playlist/" + IiI111111IIII + "/" ,
 thumbnail = "http://destinyxnowmusic.freehostia.com/nowmusic/nowuscountryballads.jpg" ,
 folder = True )
 if 25 - 25: OoooooooOO + oOOo0O00o * I1Ii11i
 plugintools . add_item (

 title = "Now Country V4" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1Ii + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/4/4a/NowCountry4.jpg/220px-NowCountry4.jpg" ,
 folder = True )
 if 92 - 92: OOOo0 + O0o0OO0O00O + O0 / oO0o0 + iIi1
 plugintools . add_item (

 title = "Now Country V3" ,
 url = "plugin://plugin.video.youtube/playlist/" + ii111iI1iIi1 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/1/1c/Now_That%27s_What_I_Call_Country_Volume_3.jpg/220px-Now_That%27s_What_I_Call_Country_Volume_3.jpg" ,
 folder = True )
 if 18 - 18: I1III * I1IiI . ooO0O0O0ooOOO / I1Ii11i / i11iIiiIii
 plugintools . add_item (

 title = "Now USA Patriotic" ,
 url = "plugin://plugin.video.youtube/playlist/" + OOO + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/f/fc/Now_thats_what_i_call_the_usa.jpg/220px-Now_thats_what_i_call_the_usa.jpg" ,
 folder = True )
 if 21 - 21: i1111I1I / I1Ii11i + OOOoo + OoooooooOO
 plugintools . add_item (

 title = "Now Country V2" ,
 url = "plugin://plugin.video.youtube/playlist/" + oo0OOo0 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/e/e5/Now_That%27s_What_I_Call_Country_Volume_2_cover.jpg/220px-Now_That%27s_What_I_Call_Country_Volume_2_cover.jpg" ,
 folder = True )
 if 91 - 91: i11iIiiIii / i1IIi + ooO0O0O0ooOOO + I1III * i11iIiiIii
 plugintools . add_item (

 title = "Now Country" ,
 url = "plugin://plugin.video.youtube/playlist/" + I11IiI + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/8/88/Nowcountryfeat.jpg/220px-Nowcountryfeat.jpg" ,
 folder = True )
 if 66 - 66: iIii1I11I1II1 % i1IIi - O0 + O0o0OO0O00O * iIi1 . oOOo0O00o
 plugintools . add_item (

 title = "Now Latino" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0ooO0Oo00o + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/1/1d/Now_latino.jpg" ,
 folder = True )
 if 52 - 52: I1III + O0 . ooO0O0O0ooOOO . I1Ii11i . Ooo00oOo00o
 plugintools . add_item (

 title = "Now Latino V2" ,
 url = "plugin://plugin.video.youtube/playlist/" + ooO0oOOooOo0 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/e/e9/Nowestoeslatino2.jpg/220px-Nowestoeslatino2.jpg" ,
 folder = True )
 if 97 - 97: OOOo0 / ooO0O0O0ooOOO
 plugintools . add_item (

 title = "Now Latino V3" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1I1ii11i1Iii + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/6/6c/Nowlatino3.jpg/220px-Nowlatino3.jpg" ,
 folder = True )
 if 71 - 71: OoOoOO00 / i1IIi . I1Ii11i % OoooooooOO . I1IiI
 plugintools . add_item (

 title = "Now Latino V4" ,
 url = "plugin://plugin.video.youtube/playlist/" + I1IiiiiI + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/3/30/Now_Latino_4_%28US%29.jpg/220px-Now_Latino_4_%28US%29.jpg" ,
 folder = True )
 if 41 - 41: i1IIi * OoOoOO00 / OoooooooOO . oO0OOoo0
I1iiiii ( ) # dd678faae9ac167bc83abf78e5cb2f3f0688d3a3
]')